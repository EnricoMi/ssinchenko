<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Spark-Connect on Sem Sinchenko</title>
    <link>http://localhost:1313/ssinchenko/tags/spark-connect/</link>
    <description>Recent content in Spark-Connect on Sem Sinchenko</description>
    <image>
      <title>Sem Sinchenko</title>
      <url>http://localhost:1313/ssinchenko/images/avatar-favicon.png</url>
      <link>http://localhost:1313/ssinchenko/images/avatar-favicon.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 04 Mar 2024 12:30:57 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/ssinchenko/tags/spark-connect/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Extending Spark Connect</title>
      <link>http://localhost:1313/ssinchenko/post/extending-spark-connect/</link>
      <pubDate>Mon, 04 Mar 2024 12:30:57 +0100</pubDate>
      <guid>http://localhost:1313/ssinchenko/post/extending-spark-connect/</guid>
      <description>Preface I would like to thank Martin Grund. He gave me a lot of useful advice during my work on this project!
Introduction Recently, I published a post about potential compatibility issues between SparkConnect and 3d-party libraries that depend on py4j. After that post, people from Databricks contacted me and suggested we work together on this issue. With their help, I tried to create a step-by-step guide for newbies on how to extend SparkConnect and how to potentially migrate from py4j logic to writing protocol plugins.</description>
    </item>
  </channel>
</rss>
